name: Django-app workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: | 
        # обновление pip
        python -m pip install --upgrade pip 
        # установка flake8 и его плагинов
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        # установка зависимостей
        pip install -r backend/foodgram_backend/requirements.txt 

    - name: Test with flake8
      run: |
        # запуск проверки проекта по flake8
        python -m flake8

  # Сразу после них добавьте новую задачу: деплой приложения
  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        # Проверка доступности репозитория Docker Hub для workflow
        uses: actions/checkout@v2 
      - name: Set up Docker Buildx
        # Вызов сборщика контейнеров docker
        uses: docker/setup-buildx-action@v1 
      - name: Login to Docker 
        # Запуск скрипта авторизации на Docker Hub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        # Пуш образа в Docker Hub 
        uses: docker/build-push-action@v2 
        with:
          context: backend/foodgram_backend
          dockerfile: Dockerfile
          push: true
          tags: sibwinter/foodgram_backend:latest 

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }} # Если ваш ssh-ключ защищён фразой-паролем
        script: |
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:latest
          sudo docker-compose stop
          sudo docker-compose rm backend
          rm .env
          touch .env
          echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo DB_PORT=${{ secrets.DB_PORT }} >> .env
          echo PORT=${{ secrets.PORT }} >> .env
          echo SSH_KEY=${{ secrets.SSH_KEY }}
          sudo docker-compose up -d
